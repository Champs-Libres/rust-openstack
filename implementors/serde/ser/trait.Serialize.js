(function() {var implementors = {};
implementors["chrono"] = [{"text":"impl Serialize for NaiveDate","synthetic":false,"types":[]},{"text":"impl Serialize for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Serialize for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Serialize for DateTime&lt;Tz&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Weekday","synthetic":false,"types":[]},{"text":"impl Serialize for Month","synthetic":false,"types":[]}];
implementors["eui48"] = [{"text":"impl Serialize for MacAddress","synthetic":false,"types":[]}];
implementors["ipnet"] = [{"text":"impl Serialize for IpNet","synthetic":false,"types":[]},{"text":"impl Serialize for Ipv4Net","synthetic":false,"types":[]},{"text":"impl Serialize for Ipv6Net","synthetic":false,"types":[]}];
implementors["openstack"] = [{"text":"impl Serialize for ContainerRef","synthetic":false,"types":[]},{"text":"impl Serialize for FlavorRef","synthetic":false,"types":[]},{"text":"impl Serialize for ImageRef","synthetic":false,"types":[]},{"text":"impl Serialize for KeyPairRef","synthetic":false,"types":[]},{"text":"impl Serialize for NetworkRef","synthetic":false,"types":[]},{"text":"impl Serialize for ObjectRef","synthetic":false,"types":[]},{"text":"impl Serialize for ProjectRef","synthetic":false,"types":[]},{"text":"impl Serialize for PortRef","synthetic":false,"types":[]},{"text":"impl Serialize for RouterRef","synthetic":false,"types":[]},{"text":"impl Serialize for SecurityGroupRef","synthetic":false,"types":[]},{"text":"impl Serialize for SnapshotRef","synthetic":false,"types":[]},{"text":"impl Serialize for SubnetRef","synthetic":false,"types":[]},{"text":"impl Serialize for UserRef","synthetic":false,"types":[]},{"text":"impl Serialize for VolumeRef","synthetic":false,"types":[]},{"text":"impl Serialize for BlockDeviceDestinationType","synthetic":false,"types":[]},{"text":"impl Serialize for BlockDevice","synthetic":false,"types":[]},{"text":"impl Serialize for ServerSortKey","synthetic":false,"types":[]},{"text":"impl Serialize for ServerStatus","synthetic":false,"types":[]},{"text":"impl Serialize for ServerPowerState","synthetic":false,"types":[]},{"text":"impl Serialize for RebootType","synthetic":false,"types":[]},{"text":"impl Serialize for AddressType","synthetic":false,"types":[]},{"text":"impl Serialize for KeyPairType","synthetic":false,"types":[]},{"text":"impl Serialize for ImageStatus","synthetic":false,"types":[]},{"text":"impl Serialize for ImageVisibility","synthetic":false,"types":[]},{"text":"impl Serialize for ImageContainerFormat","synthetic":false,"types":[]},{"text":"impl Serialize for ImageDiskFormat","synthetic":false,"types":[]},{"text":"impl Serialize for ImageSortKey","synthetic":false,"types":[]},{"text":"impl Serialize for IpVersion","synthetic":false,"types":[]},{"text":"impl Serialize for NetworkProtocol","synthetic":false,"types":[]},{"text":"impl Serialize for NetworkStatus","synthetic":false,"types":[]},{"text":"impl Serialize for NetworkSortKey","synthetic":false,"types":[]},{"text":"impl Serialize for FloatingIpStatus","synthetic":false,"types":[]},{"text":"impl Serialize for FloatingIpSortKey","synthetic":false,"types":[]},{"text":"impl Serialize for PortSortKey","synthetic":false,"types":[]},{"text":"impl Serialize for RouterSortKey","synthetic":false,"types":[]},{"text":"impl Serialize for RouterStatus","synthetic":false,"types":[]},{"text":"impl Serialize for SubnetSortKey","synthetic":false,"types":[]},{"text":"impl Serialize for Ipv6Mode","synthetic":false,"types":[]},{"text":"impl Serialize for PortExtraDhcpOption","synthetic":false,"types":[]},{"text":"impl Serialize for AllowedAddressPair","synthetic":false,"types":[]},{"text":"impl Serialize for Helper","synthetic":false,"types":[]},{"text":"impl Serialize for ExternalGateway","synthetic":false,"types":[]},{"text":"impl Serialize for AllocationPool","synthetic":false,"types":[]},{"text":"impl Serialize for HostRoute","synthetic":false,"types":[]}];
implementors["osauth"] = [{"text":"impl Serialize for ApiVersion","synthetic":false,"types":[]}];
implementors["osproto"] = [{"text":"impl&lt;T&gt; Serialize for XdotY&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Display,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for IdOrName","synthetic":false,"types":[]},{"text":"impl Serialize for UserAndPassword","synthetic":false,"types":[]},{"text":"impl Serialize for Project","synthetic":false,"types":[]},{"text":"impl Serialize for Scope","synthetic":false,"types":[]},{"text":"impl Serialize for Auth","synthetic":false,"types":[]},{"text":"impl Serialize for AuthRoot","synthetic":false,"types":[]},{"text":"impl Serialize for Identity","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Serialize for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]},{"text":"impl Serialize for Number","synthetic":false,"types":[]}];
implementors["serde_yaml"] = [{"text":"impl Serialize for Mapping","synthetic":false,"types":[]},{"text":"impl Serialize for Number","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Serialize for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Url","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()